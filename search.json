[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to mpathr","title":"Contributing to mpathr","text":"outlines propose change mpathr. detailed discussion contributing package, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to mpathr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to mpathr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to mpathr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"m-path-io/mpathr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to mpathr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to mpathr","text":"Please note mpathr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/mpathr.html","id":"importing-m-path-data","dir":"Articles","previous_headings":"","what":"Importing m-Path data","title":"mpathr","text":"show import data using mpathr, provide example data within package: shown , package comes example basic.csv can exported m-Path platform. read data R, can use read_mpath() function. also need path meta data. meta data file contains information data types column, well possible responses categorical columns. main advantage using read_mpath(), opposed functions like read.csv(), read_mpath() uses meta data correctly interpret data types. Furthermore also automatically convert columns store multiple responses lists. response multiple options like 1,4,6, read_mpath() store list number, facilitates preprocessing responses. can obtain paths example basic data meta data using mpath_example() function:","code":"mpath_example() #> [1] \"example_basic.csv\" \"example_meta.csv\" # find paths to example basic and meta data: basic_path <- mpath_example(file = \"example_basic.csv\") meta_path <- mpath_example(\"example_meta.csv\")  # read the data data <- read_mpath(   file = basic_path,   meta_data = meta_path )  data #> # A tibble: 2,221 × 100 #>    connectionId legacyCode  code      alias initials accountCode scheduledBeepId #>           <int> <chr>       <chr>     <chr> <chr>    <chr>                 <int> #>  1       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7                    -1 #>  2       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626776 #>  3       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626777 #>  4       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626781 #>  5       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626782 #>  6       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626784 #>  7       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626785 #>  8       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626786 #>  9       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626796 #> 10       234609 !9v48@jp7a7 !byyo kj… abc   Ver      jp7a7              28626795 #> # ℹ 2,211 more rows #> # ℹ 93 more variables: sentBeepId <int>, reminderForOriginalSentBeepId <int>, #> #   questionListName <chr>, questionListLabel <chr>, fromProtocolName <chr>, #> #   timeStampScheduled <int>, timeStampSent <int>, timeStampStart <int>, #> #   timeStampStop <int>, originalTimeStampSent <int>, timeZoneOffset <int>, #> #   deltaUTC <dbl>, consent_yesno_yesno <int>, #> #   gender_multipleChoice_index <int>, gender_multipleChoice_string <chr>, …"},{"path":"/articles/mpathr.html","id":"saving-m-path-data","dir":"Articles","previous_headings":"Importing m-Path data","what":"Saving m-Path data","title":"mpathr","text":"resulting data frame contain columns lists, can problematic saving data. save data, suggest following two options: want save data comma-separated values (CSV) file use another program, use write_mpath(). function collapse list columns single string parses character columns JSON strings, essentially reversing operations performed read_mpath(). Note mean data can read back using read_mpath(), data may modified thus longer line meta data. Otherwise, data used exclusively R, suggest saving R object (.RData .RDS):","code":"write_mpath(   x = data,   file = \"data.csv\" ) # As an .RData file. When using `load()`, note that the data will be stored in the `data` object # in the global environment. save(   data,    file = 'data.RData' )  # As an RDS file. saveRDS(   data,    file = 'data.RDS' )"},{"path":[]},{"path":"/articles/mpathr.html","id":"response_rate-function","dir":"Articles","previous_headings":"Obtaining response rates","what":"response_rate function","title":"mpathr","text":"common operations done Experience Sampling Methodology (ESM) data participants’ response rate. provide function response_rate() calculates response_rate per participant entire duration study, specific time frame. function takes argument valid_col, takes logical column stores whether beep answered participant, , well participant_col, identifies distinct participant. show use function example_data, contains data study example_basic.csv file, cleaning. function returns data frame : participant column, specified participant_col number_of_beeps used calculate response rate. response_rate column, proportion valid responses (specified valid_col) per participant. output function can used identify participants low response rates: also interested seeing participants’ response rate specific period time (example, think participant’s compliance significantly dropped certain date). case, supply function (otherwise optional) argument time_col, contain times stored POSIXct objects, specify date period interested (format yyyy-mm-dd yyyy/mm/dd): return participant’s response rate 15th May 2024.","code":"example_data #> # A tibble: 1,980 × 47 #>    participant code       questionnaire  scheduled           sent                #>          <int> <chr>      <chr>          <dttm>              <dttm>              #>  1           2 !bxxm dqfu main_question… 2024-04-24 08:00:57 2024-04-24 08:00:59 #>  2           2 !bxxm dqfu main_question… 2024-04-24 09:25:44 2024-04-24 09:25:45 #>  3           2 !bxxm dqfu main_question… 2024-04-24 11:14:18 2024-04-24 11:14:20 #>  4           2 !bxxm dqfu main_question… 2024-04-24 12:58:05 2024-04-24 12:58:06 #>  5           2 !bxxm dqfu main_question… 2024-04-24 14:19:51 2024-04-24 14:19:52 #>  6           2 !bxxm dqfu main_question… 2024-04-24 15:43:05 2024-04-24 15:43:06 #>  7           2 !bxxm dqfu main_question… 2024-04-24 17:12:03 2024-04-24 17:12:04 #>  8           2 !bxxm dqfu main_question… 2024-04-24 18:07:23 2024-04-24 18:07:25 #>  9           2 !bxxm dqfu main_question… 2024-04-24 20:01:21 2024-04-24 20:01:22 #> 10           2 !bxxm dqfu main_question… 2024-04-24 21:00:14 2024-04-24 21:00:17 #> # ℹ 1,970 more rows #> # ℹ 42 more variables: start <dttm>, stop <dttm>, phone_server_offset <dbl>, #> #   obs_n <int>, day_n <int>, obs_n_day <int>, answered <lgl>, bpm_day <dbl>, #> #   gender <int>, gender_string <chr>, age <chr>, life_satisfaction <dbl>, #> #   neuroticism <dbl>, slider_happy <int>, slider_sad <int>, #> #   slider_angry <int>, slider_relaxed <int>, slider_anxious <int>, #> #   slider_energetic <int>, slider_tired <int>, location_index <int>, …  response_rates <- response_rate(   data = example_data,   valid_col = answered,   participant_col = participant ) #> Calculating response rates for the entire duration of the study.  response_rates #> # A tibble: 18 × 3 #>    participant number_of_beeps response_rate #>          <int>           <int>         <dbl> #>  1           2             110         0.418 #>  2           3             110         0.564 #>  3           4             110         0.845 #>  4           5             110         0.9   #>  5           6             110         0.664 #>  6           7             110         0.673 #>  7           9             110         0.545 #>  8          10             110         0.873 #>  9          11             110         0.836 #> 10          12             110         0.9   #> 11          13             110         0.8   #> 12          14             110         0.755 #> 13          15             110         0.682 #> 14          16             110         0.318 #> 15          17             110         0.791 #> 16          18             110         0.818 #> 17          19             110         0.636 #> 18          20             110         0.436 response_rates[response_rates$response_rate < 0.5,] #> # A tibble: 3 × 3 #>   participant number_of_beeps response_rate #>         <int>           <int>         <dbl> #> 1           2             110         0.418 #> 2          16             110         0.318 #> 3          20             110         0.436 response_rates_after_15 <- response_rate(   data = example_data,   valid_col = answered,   participant_col = participant,   time_col = sent,   period_start = '2024-05-15' ) #> Calculating response rates starting from date: 2024-05-15 response_rates_after_15 #> # A tibble: 5 × 3 #>   participant number_of_beeps response_rate #>         <int>           <int>         <dbl> #> 1          16              55        0.0364 #> 2          17              55        0.691  #> 3          18             110        0.818  #> 4          19             110        0.636  #> 5          20             110        0.436"},{"path":"/articles/mpathr.html","id":"plot_response_rate-function","dir":"Articles","previous_headings":"Obtaining response rates","what":"plot_response_rate function","title":"mpathr","text":"also suggest way plot participant response rates, identify patterns like response rates dropping time. , provide plot_response_rate() function. Note resulting plot can customized using ggplot2 package.","code":"plot_response_rate(   data = example_data,   time_col = sent,   participant_col = participant,   valid_col = answered ) library(ggplot2)  plot_response_rate(   data = example_data,   time_col = sent,   participant_col = participant,   valid_col = answered ) +   theme_minimal() +   ggtitle('Response rate over time') +   xlab('Day in study')"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Merijn Mestdagh. Author, maintainer. Lara Navarrete. Author. Koen Niemeijer. Author. m-Path Software. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mestdagh M, Verdonck S, Piot M, Niemeijer K, Kilani G, Tuerlinckx F, Kuppens P, Dejonckheere E (2023). “m-Path: easy--use highly tailorable platform ecological momentary assessment intervention behavioral research clinical practice.” Frontiers Digital Health, 5, 1-11. doi:10.3389/fdgth.2023.1182175.","code":"@Article{,   title = {{m-Path}: an easy-to-use and highly tailorable platform for ecological momentary assessment and intervention in behavioral research and clinical practice},   author = {Merijn Mestdagh and Stijn Verdonck and Maarten Piot and Koen Niemeijer and Ghijs Kilani and Francis Tuerlinckx and Peter Kuppens and Egon Dejonckheere},   journal = {Frontiers in Digital Health},   year = {2023},   volume = {5},   pages = {1-11},   doi = {10.3389/fdgth.2023.1182175}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Easily Handling Data from the ‘m-Path’ Platform","text":"goal mpathr provide utility functions read perform common operations data Experience Sampling Methodology (ESM) studies collected m-Path platform (https://m-path.io/landing/). package provides functions read data m-Path, calculate response rate data Experience Sampling studies. overview use package (well video detailed guide) can found m-Path manual.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Handling Data from the ‘m-Path’ Platform","text":"","code":"install.packages(\"mpathr\") library(mpathr)"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easily Handling Data from the ‘m-Path’ Platform","text":"basic example shows read data gathered m-Path R using mpathr package. , use example data included package:","code":"# loads package library(mpathr)  # find paths to example basic and meta data: basic_path <- mpath_example(file ='example_basic.csv') meta_path <- mpath_example(file = 'example_meta.csv')  # read the data data <- read_mpath(   file = basic_path,   meta_data = meta_path )  print(data) #> # A tibble: 2,221 × 100 #>   connectionId legacyCode  code       alias initials accountCode scheduledBeepId #>          <int> <chr>       <chr>      <chr> <chr>    <chr>                 <int> #> 1       234609 !9v48@jp7a7 !byyo kjyt abc   Ver      jp7a7                    -1 #> 2       234609 !9v48@jp7a7 !byyo kjyt abc   Ver      jp7a7              28626776 #> 3       234609 !9v48@jp7a7 !byyo kjyt abc   Ver      jp7a7              28626777 #> 4       234609 !9v48@jp7a7 !byyo kjyt abc   Ver      jp7a7              28626781 #> 5       234609 !9v48@jp7a7 !byyo kjyt abc   Ver      jp7a7              28626782 #> # ℹ 2,216 more rows #> # ℹ 93 more variables: sentBeepId <int>, reminderForOriginalSentBeepId <int>, #> #   questionListName <chr>, questionListLabel <chr>, fromProtocolName <chr>, #> #   timeStampScheduled <int>, timeStampSent <int>, timeStampStart <int>, #> #   timeStampStop <int>, originalTimeStampSent <int>, timeZoneOffset <int>, #> #   deltaUTC <dbl>, consent_yesno_yesno <int>, #> #   gender_multipleChoice_index <int>, gender_multipleChoice_string <chr>, …"},{"path":"/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Easily Handling Data from the ‘m-Path’ Platform","text":"encounter clear bug need help getting function run, please file issue minimal reproducible example Github.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Easily Handling Data from the ‘m-Path’ Platform","text":"Please note mpathr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/reference/dot-mpath_locale.html","id":null,"dir":"Reference","previous_headings":"","what":"Locale to be used for m-Path data — .mpath_locale","title":"Locale to be used for m-Path data — .mpath_locale","text":"Hard coded locale used 'm-Path' data","code":""},{"path":"/reference/dot-mpath_locale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locale to be used for m-Path data — .mpath_locale","text":"","code":".mpath_locale"},{"path":"/reference/dot-mpath_locale.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Locale to be used for m-Path data — .mpath_locale","text":"object class locale length 7.","code":""},{"path":"/reference/dot-mpath_locale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locale to be used for m-Path data — .mpath_locale","text":"Return locale used readr::read_delim() friends.","code":""},{"path":"/reference/example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example m-path data — example_data","title":"Example m-path data — example_data","text":"Contains preprocessed example data m-path research study. study, 20 participants completed 11 beeps course 10 days. study consisted : intake questionnaire, participants answered study's start. main questionnaire (10 times per day), participants answered questions emotions context time. evening questionnaire (, end day), emotions activities throughout day. row corresponds one beep sent study.","code":""},{"path":"/reference/example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example m-path data — example_data","text":"","code":"example_data"},{"path":"/reference/example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example m-path data — example_data","text":"data frame 1980 rows 47 columns: participant Participant identifier. code Code participants used sign study. questionnaire questionnaire participants answered beep (can main evening questionnaire). scheduled Time stamp notification scheduled , unix time. sent Time stamp notification sent, unix time. start Time stamp notification answered, unix time. notification never answered, value NA. stop Time stamp notification completed, unix time. notification never answered, value NA. phone_server_offset difference phone time server time. obs_n Observation number participant. Goes 1 (first observation), 110 (last observation study). day_n Day number study, participant. Goes 1 10. obs_n_day Observation number within day (participant). Goes 1 11. answered Logical, whether beep answered . bpm_day Average heart rate per day. Note unlike rest variables, corresponds simulated data. gender Participant's gender. 1 means 'Male', 2 means 'Female', 3 ''. gender_string Participant's gender, string. age Participant's age years. life_satisfaction Composite variable corresponding participant's life satisfaction according Satisfaction Life Scale (SWLS). neuroticism Composite variable corresponding participant's neuroticism according Big Five Inventory (BFI). slider_happy Participants' self-reported happiness time beep. 0 (happy ) 100 (happy). slider_sad Participants' self-reported sadness time beep. 0 (sad ) 100 (sad). slider_angry Participants' self-reported anger time beep. 0 (angry ) 100 (angry). slider_relaxed Participants' self-reported relaxation time beep. 0 (relaxed ) 100 (relaxed). slider_anxious Participants' self-reported anxiety time beep. 0 (anxious ) 100 (anxious). slider_energetic Participants' self-reported energy time beep. 0 (energetic ) 100 (energetic). slider_tired Participants' self-reported tiredness time beep. 0 (tired ) 100 (tired). location_index Index corresponding participant's answer question \"now?\", list multiple options. location_string Text corresponding participant's selected location time beep. company_index Index corresponding participant's answer question \"right now?\", list multiple options. company_string Text corresponding participant's selected company time beep. activity_index Index corresponding participant's answer question \"now?\", list multiple options. activity_string Text corresponding participant's selected activity time beep. step_count Step count previous answered beep current beep evening_slider_happy Participants' happiness day, 0 (happy ) 100 (happy). evening_slider_sad Participants' sadness day, 0 (sad ) 100 (sad). evening_slider_angry Participants' anger day, 0 (angry ) 100 (angry). evening_slider_relaxed Participants' relaxation day, 0 (relaxed ) 100 (relaxed). evening_slider_anxious Participants' anxiety day, 0 (anxious ) 100 (anxious). evening_slider_energetic Participants' energy day, 0 (energetic ) 100 (energetic). evening_slider_tired Participants' tiredness day, 0 (tired ) 100 (tired). evening_stressful Participant's answer whether something stressful happened day. 1 means 'yes', 0 means ''. evening_positive Participant's answer whether something positive happened day. 1 means 'yes', 0 means ''. positive_description Explanation positive event (participants responded 'yes' previous question). stressful_description Explanation stressful event (participants responded 'yes' previous question). evening_activity_index Index corresponding participant's answer(s) question \"activities today?\", list multiple options. evening_activity_string Text corresponding participant's selected activities day. delay_start_min Delay minutes scheduled beep time participants started beep. delay_end_min Time minutes participants took fill beep (difference columns start stop).","code":""},{"path":"/reference/extract_app_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"Parses app names usage values structured usage data, start end timestamps usage durations \"Far\" \"Near\" windows.","code":""},{"path":"/reference/extract_app_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"","code":"extract_app_usage(app_names, app_values)"},{"path":"/reference/extract_app_usage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"app_names Either character vector (comma-separated strings) list character vectors, one per row. app_values Either character vector (comma-separated strings) list numeric vectors, one per row. block 6 values corresponds one app's usage record.","code":""},{"path":"/reference/extract_app_usage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"list tibbles (one per input row). tibble contains one rows: app: App name startTimeFar, endTimeFar: POSIXct timestamps (UTC) usageFar: Integer usage far window startTimeNear, endTimeNear: POSIXct timestamps (UTC) usageNear: Integer usage near window","code":""},{"path":"/reference/extract_app_usage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"input can formatted two ways: data raw form (e.g. imported CSV via read.csv()), app_names app_values character vectors element comma-separated string. data imported via read_mpath(), app_names list character vectors, app_values list integer vectors. function expects app associated exactly six values: startTimeFar, endTimeFar, usageFar, startTimeNear, endTimeNear, usageNear.","code":""},{"path":"/reference/extract_app_usage.html","id":"time-windows","dir":"Reference","previous_headings":"","what":"Time windows","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"measurement app usage includes two time windows: \"near: window captures recent app activity (typically ending around time ESM beep), \"far\" window covers 24 hours prior near window. windows, Android automatically provides start time, end time, total usage seconds period. time ranges determined operating system may vary across apps across measurements. start end times app usage windows rarely align exactly time ESM beeps, interpreting values requires caution window may include usage occurred last beep draw meaningful conclusions app use two beeps, important consider time windows much window overlaps interval. Differences length timing windows can affect interpretation accounted analysis.","code":""},{"path":"/reference/extract_app_usage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract App Usage from Paired Name/Value Columns — extract_app_usage","text":"","code":"# Using character input (e.g., raw from CSV) app_names <- c(\"foo\", \"foo,bar\") app_values <- c(   \"1000,2000,1,3000,4000,2\",   \"4000,5000,3,6000,7000,4,8000,9000,5,10000,11000,6\" ) extract_app_usage(app_names, app_values) #> Called from: extract_app_usage(app_names, app_values) #> debug: .data <- tibble(.id = seq_along(app_names), app = app_names,  #>     startTimeFar = lapply(app_values, function(x) x[[1]]), endTimeFar = lapply(app_values,  #>         function(x) x[[2]]), usageFar = lapply(app_values, function(x) x[[3]]),  #>     startTimeNear = lapply(app_values, function(x) x[[4]]), endTimeNear = lapply(app_values,  #>         function(x) x[[5]]), usageNear = lapply(app_values, function(x) x[[6]])) #> debug: .data <- tidyr::unnest(.data, -\".id\", keep_empty = TRUE) #> debug: .data <- mutate(mutate(mutate(.data, across(.cols = c(\"startTimeFar\",  #>     \"endTimeFar\", \"startTimeNear\", \"endTimeNear\"), .fns = function(x) as.double(x)/1000)),  #>     across(.cols = c(\"startTimeFar\", \"endTimeFar\", \"startTimeNear\",  #>         \"endTimeNear\"), .fns = function(x) { #>         as.POSIXct(x, tz = \"UTC\", origin = \"1970-01-01\") #>     })), across(.cols = c(\"usageFar\", \"usageNear\"), .fns = as.integer)) #> debug: .data <- tidyr::nest(.data, data = -\".id\") #> debug: .data$data #> [[1]] #> # A tibble: 1 × 7 #>   app   startTimeFar        endTimeFar          usageFar startTimeNear       #>   <chr> <dttm>              <dttm>                 <int> <dttm>              #> 1 foo   1970-01-01 00:00:01 1970-01-01 00:00:02        1 1970-01-01 00:00:03 #> # ℹ 2 more variables: endTimeNear <dttm>, usageNear <int> #>  #> [[2]] #> # A tibble: 2 × 7 #>   app   startTimeFar        endTimeFar          usageFar startTimeNear       #>   <chr> <dttm>              <dttm>                 <int> <dttm>              #> 1 foo   1970-01-01 00:00:04 1970-01-01 00:00:05        3 1970-01-01 00:00:06 #> 2 bar   1970-01-01 00:00:08 1970-01-01 00:00:09        5 1970-01-01 00:00:10 #> # ℹ 2 more variables: endTimeNear <dttm>, usageNear <int> #>   # Using list-column input (e.g., from read_mpath()) app_names <- list(\"foo\", c(\"foo\", \"bar\")) app_values <- list(   c(1000,2000,1,3000,4000,2),   c(4000,5000,3,6000,7000,4,8000,9000,5,10000,11000,6) ) extract_app_usage(app_names, app_values) #> Called from: extract_app_usage(app_names, app_values) #> debug: .data <- tibble(.id = seq_along(app_names), app = app_names,  #>     startTimeFar = lapply(app_values, function(x) x[[1]]), endTimeFar = lapply(app_values,  #>         function(x) x[[2]]), usageFar = lapply(app_values, function(x) x[[3]]),  #>     startTimeNear = lapply(app_values, function(x) x[[4]]), endTimeNear = lapply(app_values,  #>         function(x) x[[5]]), usageNear = lapply(app_values, function(x) x[[6]])) #> debug: .data <- tidyr::unnest(.data, -\".id\", keep_empty = TRUE) #> debug: .data <- mutate(mutate(mutate(.data, across(.cols = c(\"startTimeFar\",  #>     \"endTimeFar\", \"startTimeNear\", \"endTimeNear\"), .fns = function(x) as.double(x)/1000)),  #>     across(.cols = c(\"startTimeFar\", \"endTimeFar\", \"startTimeNear\",  #>         \"endTimeNear\"), .fns = function(x) { #>         as.POSIXct(x, tz = \"UTC\", origin = \"1970-01-01\") #>     })), across(.cols = c(\"usageFar\", \"usageNear\"), .fns = as.integer)) #> debug: .data <- tidyr::nest(.data, data = -\".id\") #> debug: .data$data #> [[1]] #> # A tibble: 1 × 7 #>   app   startTimeFar        endTimeFar          usageFar startTimeNear       #>   <chr> <dttm>              <dttm>                 <int> <dttm>              #> 1 foo   1970-01-01 00:00:01 1970-01-01 00:00:02        1 1970-01-01 00:00:03 #> # ℹ 2 more variables: endTimeNear <dttm>, usageNear <int> #>  #> [[2]] #> # A tibble: 2 × 7 #>   app   startTimeFar        endTimeFar          usageFar startTimeNear       #>   <chr> <dttm>              <dttm>                 <int> <dttm>              #> 1 foo   1970-01-01 00:00:04 1970-01-01 00:00:05        3 1970-01-01 00:00:06 #> 2 bar   1970-01-01 00:00:08 1970-01-01 00:00:09        5 1970-01-01 00:00:10 #> # ℹ 2 more variables: endTimeNear <dttm>, usageNear <int> #>   # You can also use this function within a tidyverse pipeline: library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union tibble(app_name = app_names, app_value = app_values) |>   mutate(usage = extract_app_usage(app_name, app_value)) #> Called from: extract_app_usage(app_name, app_value) #> debug: .data <- tibble(.id = seq_along(app_names), app = app_names,  #>     startTimeFar = lapply(app_values, function(x) x[[1]]), endTimeFar = lapply(app_values,  #>         function(x) x[[2]]), usageFar = lapply(app_values, function(x) x[[3]]),  #>     startTimeNear = lapply(app_values, function(x) x[[4]]), endTimeNear = lapply(app_values,  #>         function(x) x[[5]]), usageNear = lapply(app_values, function(x) x[[6]])) #> debug: .data <- tidyr::unnest(.data, -\".id\", keep_empty = TRUE) #> debug: .data <- mutate(mutate(mutate(.data, across(.cols = c(\"startTimeFar\",  #>     \"endTimeFar\", \"startTimeNear\", \"endTimeNear\"), .fns = function(x) as.double(x)/1000)),  #>     across(.cols = c(\"startTimeFar\", \"endTimeFar\", \"startTimeNear\",  #>         \"endTimeNear\"), .fns = function(x) { #>         as.POSIXct(x, tz = \"UTC\", origin = \"1970-01-01\") #>     })), across(.cols = c(\"usageFar\", \"usageNear\"), .fns = as.integer)) #> debug: .data <- tidyr::nest(.data, data = -\".id\") #> debug: .data$data #> # A tibble: 2 × 3 #>   app_name  app_value  usage            #>   <list>    <list>     <list>           #> 1 <chr [1]> <dbl [6]>  <tibble [1 × 7]> #> 2 <chr [2]> <dbl [12]> <tibble [2 × 7]>"},{"path":"/reference/is_opened_in_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an m-Path CSV file was opened in Excel — is_opened_in_excel","title":"Check if an m-Path CSV file was opened in Excel — is_opened_in_excel","text":"function checks m-Path data file previously opened Excel, case whole file wrapped quotation marks. Actual quotation marks also quoted, simply remove outer quotes. Also, function takes single string input (first line file) instead file , mean file read twice. One time function, another time get column names.","code":""},{"path":"/reference/is_opened_in_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an m-Path CSV file was opened in Excel — is_opened_in_excel","text":"","code":"is_opened_in_excel(line, call = rlang::caller_env())"},{"path":"/reference/is_opened_in_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an m-Path CSV file was opened in Excel — is_opened_in_excel","text":"line first line file check opened Excel. call environment function called display error message.","code":""},{"path":"/reference/is_opened_in_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an m-Path CSV file was opened in Excel — is_opened_in_excel","text":"Returns TRUE line opened Excel, otherwise error informing user problem.","code":""},{"path":"/reference/mpath_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to m-Path example data — mpath_example","title":"Get path to m-Path example data — mpath_example","text":"function provides easy way access m-Path example files.","code":""},{"path":"/reference/mpath_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to m-Path example data — mpath_example","text":"","code":"mpath_example(file = NULL)"},{"path":"/reference/mpath_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to m-Path example data — mpath_example","text":"file name file accessed. NULL, function return list example files.","code":""},{"path":"/reference/mpath_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to m-Path example data — mpath_example","text":"character string path m-Path example data","code":""},{"path":"/reference/mpath_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to m-Path example data — mpath_example","text":"","code":"# Example 1: access 'example_basic.csv' data  mpath_example('example_basic.csv') # returns the full path to the file #> [1] \"/home/runner/work/_temp/Library/mpathr/extdata/example_basic.csv\" 'example_basic.csv' #> [1] \"example_basic.csv\"  # Example 2: list all the example files  mpath_example() # returns the example files as a vector #> [1] \"example_basic.csv\" \"example_meta.csv\""},{"path":"/reference/mpathr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mpathr: Easily Handling Data from the ‘m-Path’ Platform — mpathr-package","title":"mpathr: Easily Handling Data from the ‘m-Path’ Platform — mpathr-package","text":"Provides tools importing cleaning Experience Sampling Method (ESM) data collected via 'm-Path' platform. goal provide utility functions able read perform common operations ESM data collected 'm-Path' platform (https://m-path.io/landing/). Functions include raw data handling, format standardization, basic data checks, well calculate response rate data ESM studies.","code":""},{"path":[]},{"path":"/reference/mpathr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mpathr: Easily Handling Data from the ‘m-Path’ Platform — mpathr-package","text":"Maintainer: Merijn Mestdagh merijn.mestdagh@m-path.io (ORCID) Authors: Lara Navarrete larann901@gmail.com Koen Niemeijer koen.niemeijer@kuleuven.(ORCID) contributors: m-Path Software [copyright holder]","code":""},{"path":"/reference/plot_response_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots response rate per day (and per participant) — plot_response_rate","title":"Plots response rate per day (and per participant) — plot_response_rate","text":"function returns ggplot object response rate per day (x axis) participant (color). Note instead using calendar dates, function returns plot grouped day inside study participant.","code":""},{"path":"/reference/plot_response_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots response rate per day (and per participant) — plot_response_rate","text":"","code":"plot_response_rate(data, valid_col, participant_col, time_col)"},{"path":"/reference/plot_response_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots response rate per day (and per participant) — plot_response_rate","text":"data data frame data valid_col name column stores whether beep answered participant_col name column stores participant id (equivalent) time_col name column stores time beep","code":""},{"path":"/reference/plot_response_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots response rate per day (and per participant) — plot_response_rate","text":"ggplot object response rate per day (x axis) participant (color)","code":""},{"path":"/reference/plot_response_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots response rate per day (and per participant) — plot_response_rate","text":"","code":"# load data data(example_data)  # make plot with plot_response_rate plot_response_rate(data = example_data, time_col = sent, participant_col = participant, valid_col = answered)  # The resulting ggplot object can be formatted using ggplot2 functions (see ggplot2 # documentation)."},{"path":"/reference/read_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read m-Path meta data — read_meta_data","title":"Read m-Path meta data — read_meta_data","text":"Internal function read meta data file m-Path file.","code":""},{"path":"/reference/read_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read m-Path meta data — read_meta_data","text":"","code":"read_meta_data(meta_data, warn_changed_columns = TRUE)"},{"path":"/reference/read_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read m-Path meta data — read_meta_data","text":"meta_data string path meta data file. warn_changed_columns Warn question text, type question, type answer changed study. Default TRUE may print 50 warnings.","code":""},{"path":"/reference/read_meta_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read m-Path meta data — read_meta_data","text":"tibble contents meta data file.","code":""},{"path":"/reference/read_mpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Read m-Path data — read_mpath","title":"Read m-Path data — read_mpath","text":"function reads m-Path CSV file tibble, extension data.frame.","code":""},{"path":"/reference/read_mpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read m-Path data — read_mpath","text":"","code":"read_mpath(file, meta_data, warn_changed_columns = TRUE)"},{"path":"/reference/read_mpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read m-Path data — read_mpath","text":"file string path m-Path file. meta_data string path meta data file. warn_changed_columns Warn question text, type question, type answer changed study. Default TRUE may print 50 warnings.","code":""},{"path":"/reference/read_mpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read m-Path data — read_mpath","text":"tibble m-Path data.","code":""},{"path":"/reference/read_mpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read m-Path data — read_mpath","text":"Note function tested meta data version v.1.1, advised use version meta data. m-Path dashboard, change version 'Export data' > \"export version\".","code":""},{"path":[]},{"path":"/reference/read_mpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read m-Path data — read_mpath","text":"","code":"# We can use the function mpath_examples to get the path to the example data basic_path <- mpath_example(file =\"example_basic.csv\") meta_path <- mpath_example(\"example_meta.csv\")  data <- read_mpath(file = basic_path,                 meta_data = meta_path)"},{"path":"/reference/response_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate response rate — response_rate","title":"Calculate response rate — response_rate","text":"Calculate response rate","code":""},{"path":"/reference/response_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate response rate — response_rate","text":"","code":"response_rate(   data,   valid_col,   participant_col,   time_col = NULL,   period_start = NULL,   period_end = NULL )"},{"path":"/reference/response_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate response rate — response_rate","text":"data data frame data valid_col name column stores whether beep answered participant_col name column stores participant id (equivalent) time_col optional: name column stores time beep, 'POSIXct' object. period_start string representing starting date calculate response rates (optional). Accepts dates following formats: yyyy-mm-dd oryyyy/mm/dd. period_end period end calculate response rates (optional).","code":""},{"path":"/reference/response_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate response rate — response_rate","text":"data frame response rate participant, number beeps used calculate response rate","code":""},{"path":"/reference/response_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate response rate — response_rate","text":"","code":"# Example 1: calculate response rates for the whole study # Get example data data(example_data)  # Calculate response rate for each participant  # We don't specify time_col, period_start or period_end. # Response rates will be based on all the participant's data response_rate <- response_rate(data = example_data,                                valid_col = answered,                                participant_col = participant) #> Calculating response rates for the entire duration of the study.  # Example 2: calculate response rates for a specific time period data(example_data)  # Calculate response rate for each participant between dates response_rate <- response_rate(data = example_data,                                valid_col = answered,                                participant_col = participant,                                time_col = sent,                                period_start = '2024-05-15',                                period_end = '2024-05-31') #> Calculating response rates between date: 2024-05-15 and 2024-05-31  # Get participants with a response rate below 0.5 response_rate[response_rate$response_rate < 0.5,] #> # A tibble: 2 × 3 #>   participant number_of_beeps response_rate #>         <int>           <int>         <dbl> #> 1          16              55        0.0364 #> 2          20              77        0.494"},{"path":"/reference/timestamps_to_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"m-Path timestamps based participant's local time zone, converted R datetime format, interpreted Coordinated Universal Time (UTC), previously known Greenwich Mean Time (GMT). function allows conversion m-Path timestamps datetime, optionally allows specification UTC offset forced time zone.","code":""},{"path":"/reference/timestamps_to_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"","code":"timestamps_to_datetime(x, tz_offset = NULL, force_tz = NULL)"},{"path":"/reference/timestamps_to_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"x vector timestamps transformed datetime. tz_offset numeric value added timestamps transforming datetime. typically derived timeZoneOffset column m-Path data. useful want compare timestamps absolute manner link external data sources. force_tz string specifying time zone force timestamps . useful data compared data sources different time zone. Note change actual time timestamp, time zone displayed. list time zones can used OlsonNames().","code":""},{"path":"/reference/timestamps_to_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"vector POSIXct objects representing timestamps UTC time zone. time zone may differ force_tz specified.","code":""},{"path":"/reference/timestamps_to_datetime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"function three use cases: common use case: ESM data want work participant's local time zone. case, tz_offset force_tz left empty. likely right use case . ESM data external data (e.g. sensing data data multi-lab study) want match based time stamp. external data likely UTC m-Path data participant's local time zone. case, specify tz_offset argument convert local time stamps true UTC time. However, change time stamp UTC lose ability work local time zone. specialised version use case 2, namely certain every participant lives time zone changes daylight savings time. case, can specify force_tz argument set time zone participants. change displayed time (11AM stay 11AM) change underlying time zone.","code":""},{"path":"/reference/timestamps_to_datetime.html","id":"background","dir":"Reference","previous_headings":"","what":"Background","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"Timestamps m-Path, like timeStampScheduled timeStampStart, variation UNIX timestamps, defined number seconds since January 1, 1970, 00:00:00. However, unlike standard UNIX timestamps (use UTC), m-Path timestamps based participant's local time zone. generally interested time participant's perspective absolute sense compared participants. Unfortunately, multiple time zones single column possible R, time zones (incorrectly) displayed UTC. converted R datetime format, may display UTC, lead confusion. typically issue analyzing ESM data within participant's local context, can affect comparisons data sources. accurate cross-referencing data, consider specifying UTC offset correctly adjust participant’s local time. Alternatively, can force timestamps display specific time zone using force_tz argument.","code":""},{"path":"/reference/timestamps_to_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert m-Path timestamps to a date time format — timestamps_to_datetime","text":"","code":"data <- read_mpath(   mpath_example(\"example_basic.csv\"),   mpath_example(\"example_meta.csv\") )[1:10,]  # The most common use case for this function: Convert # `timeStampStart` to datetime. Remember that these are in the # local time zone, but R displays them as being in UTC. timestamps_to_datetime(data$timeStampStart) #>  [1] \"2024-04-18 09:55:42 UTC\" \"2024-04-19 08:16:42 UTC\" #>  [3] \"2024-04-19 09:00:31 UTC\" \"2024-04-19 15:24:27 UTC\" #>  [5] \"2024-04-19 17:20:04 UTC\" \"2024-04-19 20:08:40 UTC\" #>  [7] \"2024-04-19 21:48:08 UTC\" \"2024-04-19 22:15:22 UTC\" #>  [9] \"2024-04-20 09:32:02 UTC\" \"2024-04-20 11:26:45 UTC\"  # Convert `timeStampStop` to datetime, but as being the correct # value in UTC. timestamps_to_datetime(   x = data$timeStampStop,   tz_offset = data$timeZoneOffset ) #>  [1] \"2024-04-18 07:57:30 UTC\" \"2024-04-19 06:17:54 UTC\" #>  [3] \"2024-04-19 07:01:08 UTC\" \"2024-04-19 13:25:11 UTC\" #>  [5] \"2024-04-19 15:20:50 UTC\" \"2024-04-19 18:09:27 UTC\" #>  [7] \"2024-04-19 19:48:31 UTC\" \"2024-04-19 20:16:08 UTC\" #>  [9] \"2024-04-20 07:32:35 UTC\" \"2024-04-20 09:27:11 UTC\"  # Let's convert `timeStampSent` to datetime, but this time we want to # force the time zone to be in \"America/New_York\" as we know all # participants were in this time zone and so we can link with other # data that is also in New York's time zone. timestamps_to_datetime(   x = data$timeStampSent,   force_tz = \"America/New_York\" ) #>  [1] \"2024-04-18 09:55:41 EDT\" \"2024-04-19 08:16:36 EDT\" #>  [3] \"2024-04-19 09:00:28 EDT\" \"2024-04-19 15:02:56 EDT\" #>  [5] \"2024-04-19 17:17:57 EDT\" \"2024-04-19 19:44:27 EDT\" #>  [7] \"2024-04-19 21:23:23 EDT\" \"2024-04-19 22:10:01 EDT\" #>  [9] \"2024-04-20 09:03:24 EDT\" \"2024-04-20 11:26:28 EDT\""},{"path":"/reference/write_mpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Write m-Path data to a CSV file — write_mpath","title":"Write m-Path data to a CSV file — write_mpath","text":"Save data frame tibble CSV file format downloaded data m-Path website. function useful made modifications original data like save format. Note reading back data using read_mpath() may always work, data may longer line meta data original data file.","code":""},{"path":"/reference/write_mpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write m-Path data to a CSV file — write_mpath","text":"","code":"write_mpath(x, file, .progress = TRUE)"},{"path":"/reference/write_mpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write m-Path data to a CSV file — write_mpath","text":"x data frame tibble write disk. file File connection write . .progress Logical indicating whether show progress bar. Default TRUE.","code":""},{"path":"/reference/write_mpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write m-Path data to a CSV file — write_mpath","text":"Returns x invisibly.","code":""},{"path":"/reference/write_mpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write m-Path data to a CSV file — write_mpath","text":"Even though saving data frame CSV file may seem trivial, several issues need addressed saving m-Path data. main issue m-Path data contains list columns need \"collapsed\" single string can saved CSV file. function collapses list columns single string using paste() commas delimiter values. However, columns contain strings, possible strings may contains commas well. address , function converts character columns JSON strings using jsonlite::toJSON() saving disk. write_mpath() aims provide similar CSV file m-Path dashboard, provide guarantees data can read back using read_mpath(), especially data modified. want save data use later point R (even transferring another computer), recommend using saveRDS() save() instead. Note resulting data file may exactly equal original, even modified reading read_mpath(). main reason CSV files m-Path dashboard contain necessary file delimiters corresponding number rows data. function, however, contain correct number file delimiters makes files slightly bigger compared original file.","code":""},{"path":[]},{"path":"/reference/write_mpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write m-Path data to a CSV file — write_mpath","text":"","code":"data <- read_mpath(   mpath_example(\"example_basic.csv\"),   mpath_example(\"example_meta.csv\") ) write_mpath(data, \"data.csv\")"},{"path":"/news/index.html","id":"mpathr-development-version","dir":"Changelog","previous_headings":"","what":"mpathr (development version)","title":"mpathr (development version)","text":"Add new function extract_app_usage() extract app usage data collected mobile sensing lite.","code":""},{"path":"/news/index.html","id":"mpathr-103","dir":"Changelog","previous_headings":"","what":"mpathr 1.0.3","title":"mpathr 1.0.3","text":"CRAN release: 2025-05-15","code":""},{"path":"/news/index.html","id":"minor-changes-1-0-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"mpathr 1.0.3","text":"Bump minimum R version 4.1.0 due new pipe |> used. Fix tz_offset argument timestamps_to_datetime() incorrectly calculated. refined documentation timestamps_to_datetime() clarify used.","code":""},{"path":"/news/index.html","id":"mpathr-102","dir":"Changelog","previous_headings":"","what":"mpathr 1.0.2","title":"mpathr 1.0.2","text":"CRAN release: 2024-11-22 hotfix release address issues may occur reading data files non-standard column names.","code":""},{"path":"/news/index.html","id":"minor-changes-1-0-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"mpathr 1.0.2","text":"Added link m-Path manual README file. Added light switch package website.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"mpathr 1.0.2","text":"Data files column names needed escaping (e.g. quote) now read correctly. mpathr now attempts convert string columns string lists detects entry CSV file contains multiple entries. Fixed locale issue comma used decimal separator instead period.","code":""},{"path":"/news/index.html","id":"mpathr-101","dir":"Changelog","previous_headings":"","what":"mpathr 1.0.1","title":"mpathr 1.0.1","text":"CRAN release: 2024-10-21 Resubmission package CRAN making requested changes","code":""},{"path":"/news/index.html","id":"mpathr-100","dir":"Changelog","previous_headings":"","what":"mpathr 1.0.0","title":"mpathr 1.0.0","text":"Initial CRAN submission.","code":""}]
